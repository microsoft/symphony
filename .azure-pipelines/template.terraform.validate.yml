parameters:
  - name: goVersion
    type: string
  - name: terraformVersion
    type: string
  - name: keyVaultArmSvcConnectionName
    type: string
  - name: keyVaultName
    type: string
  - name: runLayerTest
    type: boolean
    default: true
jobs:
  - job: Validate
    displayName: "Validate"
    workspace:
      clean: resources
    steps:
      - checkout: self

      - task: Bash@3
        displayName: "Setup Toolset"
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          arguments: ${{ parameters.terraformVersion }}
          bashEnvValue: "~/.profile"
          failOnStderr: true
          targetType: "inline"
          script: |
            ./setup-terraform.sh ${{ parameters.terraformVersion }}
            ./setup-tflint.sh
            ./setup-gitleaks.sh

      - task: GoTool@0
        inputs:
          version: ${{ parameters.goVersion }}
          goBin: "$(System.DefaultWorkingDirectory)"

      - script: echo '##vso[task.prependpath]$(System.DefaultWorkingDirectory)'

      - task: Bash@3
        displayName: "Run Gitleaks"
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          targetType: "inline"
          script: |
            source ./scanners.sh
            run_gitleaks './../../IAC/Terraform' 'sarif' 'info' 'true'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: "$(System.DefaultWorkingDirectory)/orchestrators/scripts/gitleaks-report.sarif"
          artifact: 'CodeAnalysisLogs'
          publishLocation: "pipeline"

      - task: Bash@3
        displayName: "Run Terraform lint"
        env:
          WORKSPACE_PATH: $(System.DefaultWorkingDirectory)
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          targetType: "filePath"
          filePath: "orchestrators/scripts/iac.tf.lint.sh"

      - task: AzureKeyVault@2
        displayName: "Pull env cred from Azure Key valut"
        inputs:
          azureSubscription: ${{ parameters.keyVaultArmSvcConnectionName }}
          keyVaultName: ${{ parameters.keyVaultName }}
          secretsFilter: "*"
          runAsPreJob: true

      - task: Bash@3
        displayName: "Run Terraform validate"
        env:
          WORKSPACE_PATH: $(System.DefaultWorkingDirectory)
          ARM_SUBSCRIPTION_ID: $(subscriptionId)
          ARM_TENANT_ID: $(tenantId)
          ARM_CLIENT_ID: $(clientId)
          ARM_CLIENT_SECRET: $(clientSecret)
          STATE_RG: $(stateRg)
          STATE_STORAGE_ACCOUNT: $(stateStorageAccount)
          STATE_CONTAINER: $(stateContainer)
          ENVIRONMENT_NAME: $(environmentName)
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          targetType: "filePath"
          filePath: "orchestrators/scripts/iac.tf.validate.sh"

      - task: Bash@3
        condition: and(succeeded(), eq('${{ parameters.runLayerTest }}', 'true'))
        displayName: "Run Layers tests"
        env:
          WORKSPACE_PATH: $(System.DefaultWorkingDirectory)
          ARM_SUBSCRIPTION_ID: $(subscriptionId)
          ARM_TENANT_ID: $(tenantId)
          ARM_CLIENT_ID: $(clientId)
          ARM_CLIENT_SECRET: $(clientSecret)
          STATE_RG: $(stateRg)
          STATE_STORAGE_ACCOUNT: $(stateStorageAccount)
          STATE_CONTAINER: $(stateContainer)
          TEST_TAG: module_tests
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          targetType: "filePath"
          filePath: "orchestrators/scripts/iac.tf.test.sh"

      - task: PublishTestResults@2
        condition: and(succeeded(), eq('${{ parameters.runLayerTest }}', 'true'))
        displayName: "Publish Layer tests results"
        inputs:
          testResultsFormat: "JUnit"
          testResultsFiles: "*.xml"
          searchFolder: "$(System.DefaultWorkingDirectory)/IAC/Terraform/test/terraform"
          failTaskOnFailedTests: true
          testRunTitle: "Terraform Layers tests"
          publishRunAttachments: true
          mergeTestResults: true
