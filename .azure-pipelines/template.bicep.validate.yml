parameters:
  - name: environmentName
    type: string
  - name: locationName
    type: string
  - name: keyVaultArmSvcConnectionName
    type: string
  - name: keyVaultName
    type: string

jobs:
  - job: Validate
    displayName: "Validate"

    steps:
      - checkout: self

      - task: Bash@3
        displayName: "Install required tools"
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          bashEnvValue: "~/.profile"
          failOnStderr: true
          targetType: "inline"
          script: |
            ./setup-azcli.sh
            ./setup-gitleaks.sh
            ./setup-powershell.sh
            ./setup-armttk.sh
            ./setup-shellspec.sh
            source ~/.bashrc

      - task: AzureKeyVault@2
        inputs:
          azureSubscription: ${{ parameters.keyVaultArmSvcConnectionName }}
          keyVaultName: ${{ parameters.keyVaultName }}
          secretsFilter: "*"
          runAsPreJob: true

      - task: Bash@3
        displayName: "Run gitleaks"
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          targetType: "inline"
          script: |
            echo 'create ./results directory'
            mkdir results

            source ./scanners.sh
            run_gitleaks './../../IAC/Bicep' './results/gitleaks-report' 'json' 'info'

      - task: PublishTestResults@2
        displayName: "Publish Gitleaks results"
        inputs:
          testResultsFiles: "*.json"
          searchFolder: "$(System.DefaultWorkingDirectory)/IAC/Bicep/results"
          failTaskOnFailedTests: true
          testRunTitle: "Gitleaks report"
          mergeTestResults: true

      - task: Bash@3
        displayName: "Run linter"
        env:
          WORKSPACE_PATH: $(System.DefaultWorkingDirectory)
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          targetType: "filePath"
          filePath: "$(System.DefaultWorkingDirectory)/orchestrators/scripts/iac.bicep.lint.sh"

      - task: Bash@3
        displayName: "Run bicep validate"
        env:
          WORKSPACE_PATH: $(System.DefaultWorkingDirectory)
          RUN_ID: $(Build.BuildId)
          ENVIRONMENT_NAME: ${{ parameters.environmentName }}
          LOCATION_NAME: ${{ parameters.locationName }}
          ARM_SUBSCRIPTION_ID: $(subscriptionId)
          ARM_TENANT_ID: $(tenantId)
          ARM_CLIENT_ID: $(clientid)
          ARM_CLIENT_SECRET: $(clientSecret)
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          targetType: "filePath"
          filePath: "orchestrators/scripts/iac.bicep.validate.sh"
