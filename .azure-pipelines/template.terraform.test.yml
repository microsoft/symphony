parameters:
  - name: goVersion
    type: string
    default: "1.18.1"
  - name: terraformVersion
    type: string
    default: "1.1.7"
  - name: keyVaultArmSvcConnectionName
    type: string
  - name: keyVaultName
    type: string

jobs:
  - job: test
    workspace:
      clean: resources
    displayName: "Execute End to End Test"
    dependsOn: PreviewDeploy

    steps:
      - checkout: self

      - task: Bash@3
        displayName: "Install Terraform"
        inputs:
          filePath: "orchestrators/scripts/setup-terraform.sh"
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          arguments: ${{ parameters.terraformVersion }}
          bashEnvValue: "~/.profile"
          failOnStderr: true

      - task: GoTool@0
        inputs:
          version: ${{ parameters.goVersion }}
          goBin: "$(System.DefaultWorkingDirectory)"

      - script: echo '##vso[task.prependpath]$(System.DefaultWorkingDirectory)'

      - task: AzureKeyVault@2
        displayName: "Pull env cred from Azure Key valut"
        inputs:
          azureSubscription: ${{ parameters.keyVaultArmSvcConnectionName }}
          keyVaultName: ${{ parameters.keyVaultName }}
          secretsFilter: "*"
          runAsPreJob: true

      - task: Bash@3
        displayName: "Run end to end tests"
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          targetType: "inline"
          script: |
            source ./tests.runner.sh
            azlogin $(ARM_SUBSCRIPTION_ID) $(ARM_TENANT_ID) $(ARM_CLIENT_ID) $(ARM_CLIENT_SECRET) 'AzureCloud'
              
            #install junit 
            echo "install go-junit-report"
            go install github.com/jstemmer/go-junit-report@latest

            # set test vars
            export resource_group_name=$(STATE_RG)
            export storage_account_name=$(STATE_STORAGE_ACCOUNT) 
            export container_name=$(STATE_CONTAINER)

            echo 'get tests list'

            pushd ./../../IAC/Terraform/test/terraform

            tests=$(find . -type f -name '*end_test.go' -print)

            SAVEIFS=$IFS
            IFS=$'\n'

            array=($tests)
            IFS=$SAVEIFS
            len=${#array[@]}

            for test in "${array[@]}"
              do
                #if [[ ${test} != *"01_init"* ]]; then
                  #echo "Test name  ${test}" 
                  terraform ${test/'./'/''}
                #fi
              done
            popd

      - task: PublishTestResults@2
        displayName: "Publish end to end test results"
        inputs:
          testResultsFormat: "JUnit"
          testResultsFiles: "*.xml"
          searchFolder: "$(System.DefaultWorkingDirectory)/IAC/Terraform/test/terraform"
          failTaskOnFailedTests: true
          testRunTitle: "Terraform Modules end to end tests"
          publishRunAttachments: true
          mergeTestResults: true
