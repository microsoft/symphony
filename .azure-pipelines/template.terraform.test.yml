---
parameters:
  - name: goVersion
    type: string
  - name: terraformVersion
    type: string

jobs:
  - job: Test
    workspace:
      clean: resources
    displayName: "E2E Test"
    dependsOn: PreviewDeploy

    steps:
      - checkout: self

      - task: Bash@3
        displayName: "Install Terraform"
        inputs:
          filePath: "scripts/orchestrators/setup-terraform.sh"
          workingDirectory: "$(System.DefaultWorkingDirectory)/scripts/orchestrators"
          arguments: ${{ parameters.terraformVersion }}
          bashEnvValue: "~/.profile"
          failOnStderr: true

      - task: GoTool@0
        inputs:
          version: ${{ parameters.goVersion }}
          goBin: "$(System.DefaultWorkingDirectory)"

      - script: echo '##vso[task.prependpath]$(System.DefaultWorkingDirectory)'

      - task: AzureCLI@2
        displayName: 'Run E2E tests'
        inputs:
          azureSubscription: symphony
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          addSpnToEnvironment: true
          workingDirectory: "$(System.DefaultWorkingDirectory)/scripts/orchestrators"
          inlineScript: |
            export WORKSPACE_PATH="$(System.DefaultWorkingDirectory)"
            export STATE_RG="$(stateRg)"
            export STATE_STORAGE_ACCOUNT="$(stateStorageAccount)"
            export STATE_CONTAINER="$(stateContainer)"
            export ENVIRONMENT_NAME="$(environmentName)"
            export TEST_TAG=""

            ./iac.tf.test.sh

      - task: PublishTestResults@2
        displayName: "Publish E2E test results"
        inputs:
          testResultsFormat: "JUnit"
          testResultsFiles: "*.xml"
          searchFolder: "$(System.DefaultWorkingDirectory)/IAC/Terraform/test/terraform"
          failTaskOnFailedTests: true
          testRunTitle: "E2E Test"
          publishRunAttachments: true
          mergeTestResults: true
