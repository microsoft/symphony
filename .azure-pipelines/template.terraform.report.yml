---
parameters:
  - name: keyVaultArmSvcConnectionName
    type: string
  - name: keyVaultName
    type: string

jobs:
  - job: Report
    displayName: "Report"
    workspace:
      clean: resources
    dependsOn: PreviewDeploy
    condition: eq(variables['runBackupState'], 'true')

    steps:
      - checkout: self

      - task: AzureKeyVault@2
        displayName: "Pull env cred from Azure Key vault"
        inputs:
          azureSubscription: ${{ parameters.keyVaultArmSvcConnectionName }}
          keyVaultName: ${{ parameters.keyVaultName }}
          secretsFilter: "clientId, clientSecret, subscriptionId, tenantId, stateRg, stateContainer, stateStorageAccount, stateStorageAccountBackup"
          runAsPreJob: true

      - task: AzureCLI@2
        displayName: 'backup $(environmentName) state files'
        inputs:
          azureSubscription: symphony
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          addSpnToEnvironment: true
          workingDirectory: "$(System.DefaultWorkingDirectory)/scripts/orchestrators"
          inlineScript: |
            export STATE_RG="$(stateRg)"
            export STATE_STORAGE_ACCOUNT="$(stateStorageAccount)"
            export STATE_CONTAINER="$(stateContainer)"
            export ENVIRONMENT_NAME="$(environmentName)"
            export STATE_STORAGE_ACCOUNT_BACKUP="$(stateStorageAccountBackup)"
            export COMMIT_ID="$(Build.SourceVersion)"
            export RUN_ID="$(Build.BuildId)"

            ./iac.tf.statebackup.sh
