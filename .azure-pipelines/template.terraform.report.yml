parameters:
  - name: keyVaultArmSvcConnectionName
    type: string
  - name: keyVaultName
    type: string

jobs:
  - job: Report
    displayName: "Report"
    workspace:
      clean: resources
    dependsOn: PreviewDeploy

    steps:
      - checkout: self

      - task: AzureKeyVault@2
        displayName: "Pull env cred from Azure Key valut"
        inputs:
          azureSubscription: ${{ parameters.keyVaultArmSvcConnectionName }}
          keyVaultName: ${{ parameters.keyVaultName }}
          secretsFilter: "clientId, clientSecret, subscriptionId, tenantId, stateRg, stateContainer, stateStorageAccount, stateStorageAccountBackup"
          runAsPreJob: true

      - task: Bash@3
        displayName: "backup $(environmentName) state files"
        condition: eq(variables.runBackupState, 'true')
        env:
          ENVIRONMENT_NAME: $(environmentName)
          ARM_SUBSCRIPTION_ID: $(subscriptionId)
          ARM_TENANT_ID: $(tenantId)
          ARM_CLIENT_ID: $(clientId)
          ARM_CLIENT_SECRET: $(clientSecret)
          STATE_RG: $(stateRg)
          STATE_STORAGE_ACCOUNT: $(stateStorageAccount)
          STATE_CONTAINER: $(stateContainer)
          STATE_STORAGE_ACCOUNT_BACKUP: $(stateStorageAccountBackup)
          COMMIT_ID: $(Build.SourceVersion)
          RUN_ID: $(Build.BuildId)
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          targetType: "filePath"
          filePath: "orchestrators/scripts/iac.tf.statebackup.sh"
