parameters:
  - name: keyVaultArmSvcConnectionName
    type: string
  - name: keyVaultName
    type: string

jobs:
  - job: Report
    displayName: "Report"
    workspace:
      clean: resources
    dependsOn: PreviewDeploy

    steps:
      - checkout: self

      - task: AzureKeyVault@2
        displayName: "Pull env cred from Azure Key valut"
        inputs:
          azureSubscription: ${{ parameters.keyVaultArmSvcConnectionName }}
          keyVaultName: ${{ parameters.keyVaultName }}
          secretsFilter: "*"
          runAsPreJob: true

      - task: Bash@3
        displayName: "backup $(ENVIRONMENT_NAME) state files"
        condition: eq(variables.runBackupState, 'true')
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          targetType: "inline"
          script: |
            source ./iac.tf.sh

            echo "Az login"

            azlogin $(ARM_SUBSCRIPTION_ID) $(ARM_TENANT_ID) $(ARM_CLIENT_ID) $(ARM_CLIENT_SECRET) 'AzureCloud'
            echo "Starting backup of $(ENVIRONMENT_NAME) environment remote state.  Commit: $(Build.SourceVersion)}"

            # Create backup container name and convert to lower case
            backupContainerName=`echo $(Build.BuildId)-$(Build.SourceVersion) | tr '[:upper:]' '[:lower:]'`

            backupResourceGroup=`az storage account list --query "[?name=='$(STATE_STORAGE_ACCOUNT_BACKUP)'].resourceGroup" -o tsv`

            sourceEndPoint=`az storage account list -g $(STATE_RG) --query "[?name=='$(STATE_STORAGE_ACCOUNT)'].{endpointName:primaryEndpoints.blob}" -o tsv`
            backupEndpoint=`az storage account list -g $backupResourceGroup --query "[?name=='$(STATE_STORAGE_ACCOUNT_BACKUP)'].{endpointName:primaryEndpoints.blob}" -o tsv`

            # backupstatestorageaccount
            echo "Copying remote state to container ${backupContainerName} in storage account $(STATE_STORAGE_ACCOUNT_BACKUP) located in resource group ${backupResourceGroup}"
            az storage copy -s ${sourceEndPoint}$(STATE_CONTAINER)/$(ENVIRONMENT_NAME)/* -d ${backupEndpoint}$(STATE_CONTAINER)/$(ENVIRONMENT_NAME)/${backupContainerName} --recursive
