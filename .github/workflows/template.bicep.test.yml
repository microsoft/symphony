name: "Template-Bicep-Test"

on:
  workflow_call:
    inputs:
      environmentName:
        type: string
        required: true
      locationName:
        type: string
        required: true
      keyVaultName:
        type: string
        required: true
      branchName:
        required: true
        type: string
    secrets:
      azureEnviromentCredentials:
        required: true

jobs:
  Test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          ref: ${{ inputs.branchName }}

      - name: Setup Toolset
        run: |
          ./setup-azcli.sh
          ./setup-powershell.sh
          ./setup-pester.sh
          ./setup-azpowershell.sh
          source ~/.bashrc
        working-directory: scripts/orchestrators

      - uses: Azure/login@v1
        name: Run Azure Login
        with:
          creds: "${{ secrets.azureEnviromentCredentials }}"

      - name: Fetch Cached Environment
        id: cache-env
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/IAC/Bicep/bicep/.env
          key: ${{ runner.os }}-${{ github.run_id }}-bicep-env

      - name: Get KeyVault Secret(s)
        id: LoadSecrets
        env:
          SECRETS: "clientId, clientSecret, subscriptionId, tenantId"
        run: |
          OIFS=$IFS
          IFS=', '
          for secretname in $SECRETS
          do
            secret=$(az keyvault secret show --name $secretname --vault-name ${{ github.event.inputs.keyVaultName }} --query "value")
            echo "::add-mask::$secret"        
            echo "$secretname=$secret" >> $GITHUB_OUTPUT
          done
          IFS=$OIFS

      - name: Run e2e tests
        env:
          ENVIRONMENT_NAME: ${{ github.event.inputs.environmentName }}
          LOCATION_NAME: ${{ github.event.inputs.locationName }}
          WORKSPACE_PATH: ${{ github.workspace }}
          RUN_ID: ${{ github.run_id }}
        run: |
          export ARM_TENANT_ID=${{ steps.LoadSecrets.outputs.tenantId }}
          export ARM_SUBSCRIPTION_ID=${{ steps.LoadSecrets.outputs.subscriptionId }}
          export ARM_CLIENT_ID=${{ steps.LoadSecrets.outputs.clientId }}
          export ARM_CLIENT_SECRET=${{ steps.LoadSecrets.outputs.clientSecret }}

          source ./tests.runner.sh
          
          pushd ../../IAC/Bicep/bicep
            load_dotenv
          popd

          bicep pester
        working-directory: scripts/orchestrators

      - name: Upload E2E Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-test--results
          path: IAC/Bicep/test/end_to_end

      - name: Publish E2E Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          nunit_files: "./IAC/Bicep/test/end_to_end/*.xml"
          check_name: "E2E Tests Results"

