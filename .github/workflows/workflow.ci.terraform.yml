name: "CI Terraform"

on:
  # push:
  #   branches: [main]
  # pull_request:
  #   branches: [main]

  workflow_dispatch:
    inputs:
      environmentName:
        description: "environmentName"
        required: true
        default: "dev"
      goVersion:
        description: "Go Version"
        required: true
        default: "1.18.1"
      terraformVersion:
        description: "Terraform Version"
        required: true
        default: "1.1.7"
      backupStateFiles:
        description: "Run Backup State Files"
        required: true
        default: "true"

jobs:
  Validate:
    uses: ./.github/workflows/template.terraform.validate.yml
    with:
      environmentName: ${{ github.event.inputs.environmentName }}
      terraformVersion: ${{ github.event.inputs.terraformVersion }}
      goVersion: ${{ github.event.inputs.goVersion }}
      runLayerTest: false
      branch: main
    secrets:
      azureEnviromentCredentials: ${{ secrets.AZURE_CREDENTIALS }}

  PreviewDeploy:
    needs: Validate
    uses: ./.github/workflows/template.terraform.previewdeploy.yml
    with:
      environmentName: ${{ github.event.inputs.environmentName }}
      terraformVersion: ${{ github.event.inputs.terraformVersion }}
      branch: main
    secrets:
      azureEnviromentCredentials: ${{ secrets.AZURE_CREDENTIALS }}

  Test:
    uses: ./.github/workflows/template.terraform.test.yml
    needs: PreviewDeploy
    with:
      environmentName: ${{ github.event.inputs.environmentName }}
      terraformVersion: ${{ github.event.inputs.terraformVersion }}
      goVersion: ${{ github.event.inputs.goVersion }}
      branch: main
    secrets:
      azureEnviromentCredentials: ${{ secrets.AZURE_CREDENTIALS }}

  Report:
    needs: PreviewDeploy
    if: ${{ github.event.inputs.backupStateFiles == 'true' }}
    uses: ./.github/workflows/template.terraform.report.yml
    with:
      environmentName: ${{ github.event.inputs.environmentName }}
      branch: main
    secrets:
      azureEnviromentCredentials: ${{ secrets.AZURE_CREDENTIALS }}
