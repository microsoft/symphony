name: "Template-TF-Test"
on:
  workflow_call:
    inputs:
      environmentName:
        description: "environmentName"
        required: true
        type: string
        default: "dev"
      goVersion:
        description: "Go Version"
        required: true
        default: "1.18.1"
        type: string
      terraformVersion:
        description: "Terraform Version"
        required: true
        default: "1.1.7"
        type: string
      branch:
        description: "Branch Name"
        required: true
        type: string
        default: "main"
      keyVaultName:
        description: "keyVaultName"
        type: string
        required: true
        default: "kv-symphony-env"
    secrets:
      azureEnviromentCredentials:
        required: true

jobs:
  Test:
    name: "E2E Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: Setup Toolset
        run: |
          ./setup-azcli.sh
          ./setup-terraform.sh ${{ inputs.terraformVersion }}
        working-directory: orchestrators/scripts
        shell: bash

      - uses: Azure/login@v1
        name: Run Azure Login
        with:
          creds: "${{ secrets.azureEnviromentCredentials }}"

      - uses: Azure/get-keyvault-secrets@v1
        name: Get KeyVault Secrets
        with:
          keyvault: ${{ github.event.inputs.keyVaultName }}
          secrets: "clientId, clientSecret, subscriptionId, tenantId, stateRg, stateContainer, stateStorageAccount"
        id: kvSecrets

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ inputs.goVersion }}
      - name: Run E2E Tests
        env:
          ARM_SUBSCRIPTION_ID: ${{ steps.kvSecrets.outputs.subscriptionId }}
          ARM_TENANT_ID: ${{ steps.kvSecrets.outputs.tenantId }}
          ARM_CLIENT_ID: ${{ steps.kvSecrets.outputs.clientId }}
          ARM_CLIENT_SECRET: ${{ steps.kvSecrets.outputs.clientSecret }}
          STATE_STORAGE_ACCOUNT: ${{ steps.kvSecrets.outputs.stateStorageAccount }}
          STATE_CONTAINER: ${{ steps.kvSecrets.outputs.stateContainer }}
          STATE_RG: ${{ steps.kvSecrets.outputs.stateRg }}
          ENVIRONMENT_NAME: ${{ inputs.environmentName }}
        run: |
          source ./tests.runner.sh
          azlogin "${ARM_SUBSCRIPTION_ID}" "${ARM_TENANT_ID}" "${ARM_CLIENT_ID}" "${ARM_CLIENT_SECRET}" 'AzureCloud'

          #install junit 
          echo "install go-junit-report"
          go install github.com/jstemmer/go-junit-report@latest

          # set test vars
          export resource_group_name="${STATE_RG}"
          export storage_account_name="${STATE_STORAGE_ACCOUNT}"
          export container_name="${STATE_CONTAINER}"

          pushd ./../../IAC/Terraform/test/terraform
          echo "Run tests with tag = e2e_test"
          terraform e2e_test true        
          popd

        working-directory: orchestrators/scripts
        shell: bash

      - uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: E2E Test results
          path: ./IAC/Terraform/test/terraform/*.xml

      - name: Publish E2E Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "./IAC/Terraform/test/terraform/*.xml"
          check_name: "End2End tests Results"
