---
name: "Template-Store-Event"

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      pipelineName:
        type: string
        required: true
      eventName:
        type: string
        required: true
      eventGroupId:
        type: string
        required: true
      data:
        type: string
        required: true
      keyVaultName:
        type: string
        required: true
      comment:
        type: string
        required: false
      githubEnvironment:
        type: string
        required: true

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  StoreEvent:
    name: Store Event
    runs-on: ubuntu-latest
    environment: ${{ inputs.githubEnvironment }}

    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v2
        name: Run Azure Login
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get KeyVault Secret(s)
        id: LoadSecrets
        env:
          SECRETS: "eventsStorageAccount, eventsTableName"
          KEY_VAULT_NAME: ${{ inputs.keyVaultName }}
        run: ./github.loadsecrets.sh
        working-directory: scripts/orchestrators

      - name: Store Event
        env:
          WORKSPACE_PATH: ${{ github.workspace }}
        run: |
          export EVENTS_STORAGE_ACCOUNT=${{ steps.LoadSecrets.outputs.eventsStorageAccount }}
          export EVENTS_TABLE_NAME=${{ steps.LoadSecrets.outputs.eventsTableName }}

          source ./events.sh

          store_event "${{ inputs.pipelineName }}" "${{ inputs.eventName }}" "${{ inputs.eventGroupId }}" "${{ inputs.data }}"

        working-directory: scripts/orchestrators

      - name: Comment PR
        if: ${{ inputs.comment != '' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${{ inputs.comment }}`
            });
