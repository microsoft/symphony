---
name: "Template-Terraform-Cleanup"

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      pullRequestNumber:
        type: string
        required: true
      keyVaultName:
        type: string
        required: true
      terraformVersion:
        type: string
        required: true
      githubEnvironment:
        type: string
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  GetEnvironments:
    name: GetEnvironments
    uses: ./.github/workflows/template.queryevents.yml
    with:
      pipelineName: PR
      eventName: NewEnvironment
      eventGroupId: PR-${{ inputs.pullRequestNumber }}-${{ github.repository_id }}
      keyVaultName: ${{ inputs.keyVaultName }}
      githubEnvironment: ${{ inputs.githubEnvironment }}

  Destroy:
    name: Destroy
    needs: [GetEnvironments]
    runs-on: ubuntu-latest
    environment: ${{ inputs.githubEnvironment }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Toolset
        run: |
          ./setup-azcli.sh
          ./setup-terraform.sh ${{ inputs.terraformVersion }}
        working-directory: scripts/orchestrators
        shell: bash

      - uses: azure/login@v2
        name: Run Azure Login
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get KeyVault Secret(s)
        id: LoadSecrets
        env:
          SECRETS: "stateRg, stateContainer, stateStorageAccount"
          KEY_VAULT_NAME: ${{ inputs.keyVaultName }}
        run: ./github.loadsecrets.sh
        working-directory: scripts/orchestrators

      - name: Run TF Destroy
        env:
          WORKSPACE_PATH: ${{ github.workspace }}
        run: |
          export STATE_RG=${{ steps.LoadSecrets.outputs.stateRg }}
          export STATE_STORAGE_ACCOUNT=${{ steps.LoadSecrets.outputs.stateStorageAccount }}
          export STATE_CONTAINER=${{ steps.LoadSecrets.outputs.stateContainer }}

          # NEW_ENVIRONMENT_EVENTS_JSON is an array of events.
          # Each event has a Name, SHA and Location properties.
          # For each event, we want to checkout the .SHA commit, get the .Name environment name
          # and the config directory of the environment, and pass it to the destroy script.

          for event in $(echo "${NEW_ENVIRONMENT_EVENTS_JSON}" | jq -c '.[]'); do
              sha=$(echo "${event}" | jq -r '.SHA')
              name=$(echo "${event}" | jq -r '.Name')
              directory=$(echo "${event}" | jq -r '.Directory')

              git checkout "${sha}"
              echo "Destroying environment: $name"
              export ENVIRONMENT_NAME=$name
              export ENVIRONMENT_DIRECTORY=$directory

              ./iac.tf.destroy.sh
          done
        working-directory: scripts/orchestrators
        shell: bash
