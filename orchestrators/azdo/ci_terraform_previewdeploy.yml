parameters:
  - name: goVersion
    type: string
    default: "1.18.1"
  - name: terraformVersion
    type: string
    default: "1.1.7"
  - name: KeyVaultSvcName
    type: string
  - name: KeyVaultName
    type: string

jobs:
  - job: previewDeploy
    workspace:
      clean: resources
    displayName: "Preivew & Deploy"
    dependsOn: validate

    steps:
      - checkout: self

      - task: Bash@3
        displayName: "Install Terraform"
        inputs:
          filePath: "orchestrators/scripts/setup-terraform.sh"
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          arguments: ${{ parameters.terraformVersion }}
          bashEnvValue: "~/.profile"
          failOnStderr: true

      - task: GoTool@0
        inputs:
          version: ${{ parameters.goVersion }}
          goBin: "$(System.DefaultWorkingDirectory)"

      - script: echo '##vso[task.prependpath]$(System.DefaultWorkingDirectory)'

      - task: AzureKeyVault@2
        displayName: "Pull env cred from Azure Key valut"
        inputs:
          azureSubscription: ${{ parameters.KeyVaultSvcName }}
          KeyVaultName: ${{ parameters.KeyVaultName }}
          SecretsFilter: "*"
          RunAsPreJob: true

      - task: Bash@3
        displayName: "Run Terraform plan & Apply"
        env:
          WORKSPACE_PATH: $(System.DefaultWorkingDirectory)
          ARM_SUBSCRIPTION_ID: $(SUBSCRIPTIONID)
          ARM_TENANT_ID: $(TENANTID)
          ARM_CLIENT_ID: $(CLIENTID)
          ARM_CLIENT_SECRET: $(CLIENTSECRET)
          STATE_STORAGE_ACCOUNT: $(STATESTORAGEACCOUNT)
          STATE_CONTAINER: $(STATECONTAINER)
          STATE_RG: $(STATERG)
          ENV: $(env)
        inputs:
          workingDirectory: "$(System.DefaultWorkingDirectory)/orchestrators/scripts"
          targetType: "filePath"
          filePath: "orchestrators/scripts/iac.tf.previewdeploy.sh"
