parameters:
  - name: EnvironmentName
    type: string
  - name: KeyVaultAzureSubscriptionName
    type: string
  - name: KeyVaultName
    type: string

jobs:
  - job: Validate
    displayName: "Validate"

    steps:
      - checkout: symphony

      - task: Bash@3
        displayName: "Install required tools"
        inputs:
          filePath: 'orchestrators/scripts/setup-azcli.sh'
          workingDirectory: '$(System.DefaultWorkingDirectory)/orchestrators/scripts'
          bashEnvValue: '~/.profile'
          failOnStderr: true
          targetType: 'inline'
          script: |
            ./setup-azcli.sh
            ./setup-gitleaks.sh
            ./setup-powershell.sh
            ./setup-pester.sh
            ./setup-armttk.sh
            ./setup-shellspec.sh
            source ~/.bashrc

      - task: AzureKeyVault@2
        inputs:
          azureSubscription: ${{ parameters.KeyVaultAzureSubscriptionName }}
          KeyVaultName: ${{ parameters.KeyVaultName }}
          SecretsFilter: '*'
          RunAsPreJob: true

      - task: Bash@3
        displayName: "Run gitleaks"
        inputs:
          workingDirectory: '$(System.DefaultWorkingDirectory)/orchestrators/scripts'
          targetType: 'inline'
          script: |
            echo 'create ./results directory'
            mkdir results

            source ./scanners.sh
            run_gitleaks './../../IAC/Bicep' './results/gitleaks-report' 'json' 'info'

      - task: Bash@3
        displayName: "Run linter"
        env:
          WORKSPACE_PATH: $(System.DefaultWorkingDirectory)
        inputs:
          workingDirectory: '$(System.DefaultWorkingDirectory)/orchestrators/scripts'
          targetType: 'filePath'
          filePath: 'iac.bicep.lint.sh'

      - task: Bash@3
        displayName: "Run bicep validate"
        env:
          WORKSPACE_PATH: $(System.DefaultWorkingDirectory)
          RUN_ID: $(Build.BuildId)
        inputs:
          workingDirectory: '$(System.DefaultWorkingDirectory)/orchestrators/scripts'
          targetType: 'inline'
          script: |
            source ./iac.bicep.sh

            azlogin $(SUBID) $(TENANTID) $(CLIENTID) $(CLIENTSECRET) 'AzureCloud'

            export ENVIRONMENT=${EnvironmentName}
            export LOCATION=$(cat ../../env/bicep/$(EnvironmentName)/parameters.json | jq -r '.parameters.location.value')

            ./iac.bicep.validate.sh

      - task: Bash@3
        displayName: "Run module tests"
        inputs:
          workingDirectory: '$(System.DefaultWorkingDirectory)/orchestrators/scripts'
          targetType: 'inline'
          script: |
            source ./tests.runner.sh

            bicep pester

      - task: PublishTestResults@2
        displayName: "Publish unit test results for helpers"
        inputs:
          testResultsFormat: "JUnit"
          testResultsFiles: "*.xml"
          searchFolder: "$(System.DefaultWorkingDirectory)/IAC/Bicep/test"
          failTaskOnFailedTests: true
          testRunTitle: "Module testing"
