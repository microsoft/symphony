jobs:
    - job: test
      workspace:
        clean:  resources       
      displayName: "Execute End to End Test"
        #condition: eq('false', 'true')
      dependsOn: preview

      steps:
        - checkout: Symphony 

        - task: Bash@3
         displayName: "Install Terraform"
         inputs:
            filePath: 'orchestrators/scripts/setup-terraform.sh'
            workingDirectory: '$(System.DefaultWorkingDirectory)/orchestrators/scripts'
            arguments: "1.1.7"
            bashEnvValue: '~/.profile'
            failOnStderr: true

        - task: GoTool@0
          inputs:
            version: '1.18.1'
            goBin: "$(System.DefaultWorkingDirectory)"

        - script: echo '##vso[task.prependpath]$(System.DefaultWorkingDirectory)'

        - task: AzureKeyVault@2
          displayName: "Pull env cred from Azure Key valut"
          inputs:
            azureSubscription: 'Symphony-kv2' #'Symphony-kv'#$(SUBID)
            KeyVaultName: 'kv-symphony-env'
            SecretsFilter: '*'
            RunAsPreJob: true
          
        - task: Bash@3
          displayName: "Run end to end tests"
          inputs:
            workingDirectory: '$(System.DefaultWorkingDirectory)/orchestrators/scripts'
            targetType: 'inline'
            script: |         
              source ./tests.runner.sh
              azlogin $(SUBID) $(TENANTID) $(CLIENTID) $(CLIENTSECRET) 'AzureCloud'
                
              #install junit 
              echo "install go-junit-report"
              go install github.com/jstemmer/go-junit-report@latest

              # set test vars
              export resource_group_name=$(STATERG)
              export storage_account_name=$(STATESTORAGEACCOUNT) 
              export container_name=$(STATECONTAINER)

              pushd .
              echo 'get tests list'
              cd ./../../IAC/Terraform/test/terraform

              tests=$(find . -type f -name '*end_test.go' -print)
              
              SAVEIFS=$IFS
              IFS=$'\n'

              array=($tests)
              IFS=$SAVEIFS
              len=${#array[@]}
              
              for test in "${array[@]}"
                do
                  #if [[ ${test} != *"01_init"* ]]; then
                    #echo "Test name  ${test}" 
                    terraform ${test/'./'/''}
                  #fi
                done
              popd

        - task: PublishTestResults@2
          displayName: "Publish end to end test results"
          inputs:
            testResultsFormat: "JUnit"
            testResultsFiles: "*.xml"
            searchFolder: "$(System.DefaultWorkingDirectory)/IAC/Terraform/test/terraform"
            failTaskOnFailedTests: true # TEMP true
            testRunTitle: "Terraform Modules end to end tests"
            publishRunAttachments: true
            mergeTestResults: true