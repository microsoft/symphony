// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.226.0/containers/azure-terraform
{
	"name": "Symphony",
	"build": {
		"dockerfile": "Dockerfile",
		"args": { 
			"TFLINT_RULESET_AZURERM_VERSION": "v0.14.0"
		}
	},
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind" ],
	// "mounts": ["source=dind-var-lib-docker,target=/var/lib/docker,type=volume"],
	"overrideCommand": false,
	"runArgs": ["--env-file",".devcontainer/devcontainer.env", "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],
    "remoteEnv": {
		// Sets environment variables required for terrafom remote backend
		"TF_BACKEND_RESOURCE_GROUP" : "${containerEnv:TF_BACKEND_RESOURCE_GROUP}",
		"TF_BACKEND_LOCATION": "${containerEnv:TF_BACKEND_LOCATION}",
		"TF_BACKEND_STORAGE_ACCOUNT" : "${containerEnv:TF_BACKEND_STORAGE_ACCOUNT}",                
		"TF_BACKEND_CONTAINER" : "${containerEnv:TF_BACKEND_CONTAINER}",
		"TF_BACKEND_KEY" : "${containerEnv:TF_BACKEND_KEY}"

		// Use 'TF_VAR' prefix to set input variables for terraform templates
		// "TF_VAR_rg_name":  "${containerEnv:TF_VAR_RG_NAME}"
	},
	"customizations": {
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": { 
				"terraform.languageServer": {
					"enabled": true,
					"args": []
				},
				"azureTerraform.terminal": "integrated",
				"go.toolsManagement.checkForUpdates": "local",
				"go.useLanguageServer": true,
				"go.gopath": "/go",
				"go.goroot": "/usr/local/go"
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"hashicorp.terraform",
				"ms-azuretools.vscode-azureterraform",
				"ms-dotnettools.vscode-dotnet-runtime",
				"golang.Go",
				"mikestead.dotenv",
				"esbenp.prettier-vscode",
				"GitHub.vscode-pull-request-github",
				"GitHub.codespaces",
				"GitHub.copilot",
				"GitHub.remotehub",
				"GitHub.vscode-codeql",
				"ms-vscode.azure-account",
				"yzhang.markdown-all-in-one",
				"cschleiden.vscode-github-actions",
				"ms-vscode-remote.vscode-remote-extensionpack",
				"VisualStudioExptTeam.vscodeintellicode",
				"ms-vscode.powershell",
				"ms-vscode.azure-repos",
				"azps-tools.azps-tools",
				"ms-vscode.vscode-node-azure-pack",
				"eamodio.gitlens",
				"tfsec.tfsec",
				"bierner.markdown-mermaid"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "terraform --version",

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"features": {
		"ghcr.io/devcontainers/features/azure-cli:1": {
			"version": "2.34.1"
		},
		"ghcr.io/devcontainers/features/terraform": {
			"version": "1.1.7",
			"tflint": "0.34.1",
			"terragrunt": "0.36.3"
		},
		"ghcr.io/devcontainers/features/dotnet:1": {
			"version": "6.0"
		},
		"ghcr.io/devcontainers/features/powershell:1": {
			"version": "7.2.1"
		},
		"ghcr.io/devcontainers/features/go:1": {
			"version": "1.17.8"
		},
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {},
		"ghcr.io/devcontainers/features/github-cli:1": {},
		"ghcr.io/devcontainers/features/common-utils:2": {},
		"ghcr.io/rchaganti/vsc-devcontainer-features/azurebicep:1.0.5": {}
	}
}
